#include "Items.h"
#include "Utility.h"

Spoon::Spoon(double successMultiplier):
    UtilityItem("Spoon",
                "      ██▓▓░░    \n"
                "    ▓▓██▒▒▒▒░░  \n"
                "  ▒▒██▓▓░░░░▒▒  \n"
                "  ████▓▓░░░░░░░░\n"
                "  ██▓▓▓▓░░  ░░▒▒\n"
                "░░██▓▓▓▓      ░░\n"
                "  ▓▓▓▓▓▓░░    ░░\n"
                "  ▓▓██▓▓░░  ░░░░\n"
                "    ██▓▓▓▓▒▒░░  \n"
                "      ▒▒▓▓▒▒    \n"
                "        ▒▒      \n"
                "        ▒▒      \n"
                "        ░░      \n"
                "        ░░      \n"
                "        ░░▒▒    \n"
                "      ░░░░▒▒    \n"
                "      ░░░░▒▒    \n"
                "      ░░░░▒▒    \n"
                "      ░░░░▒▒    \n"
                "      ░░░░▒▒    \n"
                "      ░░░░▒▒    \n"
                "      ░░░░▒▒    \n"
                "        ░░▒▒    \n"
                "        ░░▒▒    \n"
                "        ░░░░    \n",

                " ________   .==. "
                "[________>c((_  )"
                "            '==' ",

                successMultiplier)
{}

Crowbar::Crowbar(double successMultiplier):
    UtilityItem("Crowbar",
                "      ``.`                     \n"
                "   /ohdysshs/                  \n"
                "  +my/.   `/do                 \n"
                "  /:        /d:                \n"
                "             sd`               \n"
                "             -my               \n"
                "              sm+              \n"
                "              `dm.             \n"
                "               /mh             \n"
                "                ym/            \n"
                "                -mm.           \n"
                "                 +my           \n"
                "                 `dm+          \n"
                "                 `hmN-         \n"
                "                  -ddm`        \n"
                "                   /dmh        \n"
                "                   `smm+       \n"
                "                    .hdN-      \n"
                "                     :mdm`     \n"
                "                      omdh`    \n"
                "                       /hdh-   \n"
                "                        .yddy. \n"
                "                         `ommd-\n"
                "                           .+/`\n",

                "      `..---..`"
                " `.----.`      "
                ".+/.           ",

                successMultiplier)
{}

double Crowbar::attack(double threshold){
    double roll{generateRandomNumber()};
    if(roll > threshold + 0.1){
        std::cout<<"You hit and deal 5 damage.\n";
        return 5;
    }
    std::cout<<"You miss and deal no damage.\n";
    return 0;
}

Pen::Pen(size_t damage):
    DamageItem("Pen",
               "                                  ░░░░\n"
               "                              ░░░░░░██\n"
               "                                ░░██  \n"
               "                          ░░░░░░██░░░░\n"
               "                        ░░░░░░██  ▒▒  \n"
               "                      ░░  ░░░░░░▒▒    \n"
               "                    ░░  ░░▓▓▒▒▒▒▒▒    \n"
               "                  ░░  ░░▒▒▒▒░░▒▒      \n"
               "                 ░░░░░░░░██  ▒▒       \n"
               "               ░░░░░░▒▒██  ▒▒         \n"
               "             ▒▒  ░░▓▓▓▓░░▒▒           \n"
               "             ░░░░██  ▒▒▒▒             \n"
               "         ░░  ▒▒▓▓▒▒▒▒                 \n"
               "         ░░░░▒▒▒▒                     \n"
               "       ░░░░██▒▒                       \n"
               "     ░░░░▒▒▒▒                         \n"
               "   ░░░░▒▒▒▒                           \n"
               " ▒▒▓▓▒▒                               \n"
               " ▓▓                                   \n",

                "|___|"
                " ).( "
                " \\|/ ",

               damage)
{}

Knife::Knife(size_t damage):
    DamageItem("Knife",
               "▓▓                            \n"
               "▓▓▓▓                          \n"
               "▓▓  ▓▓                        \n"
               "▓▓  ░░▓▓                      \n"
               "▒▒  ░░░░▓▓                    \n"
               "▒▒▒▒░░▒▒░░▓▓                  \n"
               "  ▒▒▒▒░░░░░░▓▓                \n"
               "    ▒▒▒▒░░░░░░▓▓              \n"
               "      ▒▒▒▒░░▒▒░░▓▓██          \n"
               "        ▒▒▒▒░░░░██▓▓██        \n"
               "          ▒▒  ██▓▓▓▓██        \n"
               "            ▒▒▓▓▓▓██▓▓██      \n"
               "          ██▓▓▒▒████▓▓▓▓██    \n"
               "            ████▒▒  ██▓▓▓▓██  \n"
               "                ▒▒    ██▓▓▓▓██\n"
               "                        ██▓▓██\n"
               "                ▒▒      ████  \n"
               "                ▒▒            \n",

               "___________ ____________"
               "|           )._______.-'"
               "`----------'            ",

               damage)
{}

bool Knife::pryOpen(double threshold){
    double roll{generateRandomNumber()};
    std::cout<<"You try using the "<<itemName;
    if(roll > threshold + 0.1){
        std::cout<<" and succeed!\n";
        return true;
    }
    std::cout<<" and fail! The item also breaks.\n";
    return false;
}

Pistol::Pistol(size_t damage):
    DamageItem("Pistol",
               "  ████████                                                              \n"
               "  ██▓▓    ██          ████████████████████████████                      \n"
               "████████████████████████                          ██                    \n"
               "██                    ██░░██████████████████████░░  ██      ██████      \n"
               "██░░░░░░░░░░░░░░░░░░░░██░░██                  ████░░  ██  ██      ██    \n"
               "██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██░░██░░████████████░░░░██░░██░░████░░░░████      \n"
               "████████████████████████░░██░░▓▓▒▒▒▒▒▒▒▒▒▒██░░██░░  ████░░░░██          \n"
               "    ██▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒██░░██░░████████████░░░░██░░░░████░░░░░░██        \n"
               "      ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒██░░██░░░░░░░░░░░░░░░░░░██░░▒▒██░░██░░░░██        \n"
               "        ████████████████░░██▒▒████████████▒▒▒▒██▒▒▒▒██▒▒░░██████        \n"
               "                      ██░░██████████████████████████▒▒▒▒▒▒▓▓▓▓▓▓██      \n"
               "                        ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░██▓▓▓▓██▓▓▓▓██    \n"
               "                          ██████████████████████████░░██▓▓██░░██▓▓██    \n"
               "                              ██▒▒██  ██▒▒▒▒██  ██▒▒████▓▓▓▓██▓▓▓▓██    \n"
               "                              ██▒▒██  ██▒▒██    ██▒▒▒▒██▓▓▓▓▓▓▓▓▓▓▓▓██  \n"
               "                              ██░░░░████████████░░░░██  ██▓▓▓▓▓▓▓▓▓▓██  \n"
               "                                ██░░░░░░░░░░░░░░░░██    ██▓▓▓▓▓▓▓▓▓▓██  \n"
               "                                  ████████████████      ██  ▓▓▓▓▓▓▓▓▓▓██\n"
               "                                                        ██  ▓▓▓▓██▓▓▓▓██\n"
               "                                                        ██  ▓▓██░░██▓▓██\n"
               "                                                        ██▓▓  ▓▓██▓▓▓▓██\n"
               "                                                        ██▓▓▓▓▓▓▓▓▓▓▓▓██\n"
               "                                                          ██▓▓▓▓▓▓▓▓██  \n"
               "                                                            ████████    \n",

               "/ __.==--"
               "/#(-'    "
               "`-'      ",

               damage)
{}


